// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/org/hummingdroid/Communication.proto

package org.hummingdroid;

public final class Communication {
  private Communication() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface AttitudeOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required float altitude = 1;
    boolean hasAltitude();
    float getAltitude();
    
    // required float roll = 2;
    boolean hasRoll();
    float getRoll();
    
    // required float pitch = 3;
    boolean hasPitch();
    float getPitch();
    
    // required float yaw_rate = 4;
    boolean hasYawRate();
    float getYawRate();
  }
  public static final class Attitude extends
      com.google.protobuf.GeneratedMessageLite
      implements AttitudeOrBuilder {
    // Use Attitude.newBuilder() to construct.
    private Attitude(Builder builder) {
      super(builder);
    }
    private Attitude(boolean noInit) {}
    
    private static final Attitude defaultInstance;
    public static Attitude getDefaultInstance() {
      return defaultInstance;
    }
    
    public Attitude getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required float altitude = 1;
    public static final int ALTITUDE_FIELD_NUMBER = 1;
    private float altitude_;
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getAltitude() {
      return altitude_;
    }
    
    // required float roll = 2;
    public static final int ROLL_FIELD_NUMBER = 2;
    private float roll_;
    public boolean hasRoll() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getRoll() {
      return roll_;
    }
    
    // required float pitch = 3;
    public static final int PITCH_FIELD_NUMBER = 3;
    private float pitch_;
    public boolean hasPitch() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getPitch() {
      return pitch_;
    }
    
    // required float yaw_rate = 4;
    public static final int YAW_RATE_FIELD_NUMBER = 4;
    private float yawRate_;
    public boolean hasYawRate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getYawRate() {
      return yawRate_;
    }
    
    private void initFields() {
      altitude_ = 0F;
      roll_ = 0F;
      pitch_ = 0F;
      yawRate_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasAltitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoll()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitch()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawRate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, altitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, roll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pitch_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, yawRate_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, altitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, roll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pitch_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, yawRate_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.hummingdroid.Communication.Attitude parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.Attitude parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.Attitude parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hummingdroid.Communication.Attitude prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hummingdroid.Communication.Attitude, Builder>
        implements org.hummingdroid.Communication.AttitudeOrBuilder {
      // Construct using org.hummingdroid.Communication.Attitude.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        altitude_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        roll_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        pitch_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        yawRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.hummingdroid.Communication.Attitude getDefaultInstanceForType() {
        return org.hummingdroid.Communication.Attitude.getDefaultInstance();
      }
      
      public org.hummingdroid.Communication.Attitude build() {
        org.hummingdroid.Communication.Attitude result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.hummingdroid.Communication.Attitude buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.hummingdroid.Communication.Attitude result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.hummingdroid.Communication.Attitude buildPartial() {
        org.hummingdroid.Communication.Attitude result = new org.hummingdroid.Communication.Attitude(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roll_ = roll_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pitch_ = pitch_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.yawRate_ = yawRate_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.hummingdroid.Communication.Attitude other) {
        if (other == org.hummingdroid.Communication.Attitude.getDefaultInstance()) return this;
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasRoll()) {
          setRoll(other.getRoll());
        }
        if (other.hasPitch()) {
          setPitch(other.getPitch());
        }
        if (other.hasYawRate()) {
          setYawRate(other.getYawRate());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasAltitude()) {
          
          return false;
        }
        if (!hasRoll()) {
          
          return false;
        }
        if (!hasPitch()) {
          
          return false;
        }
        if (!hasYawRate()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              altitude_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              roll_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pitch_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              yawRate_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float altitude = 1;
      private float altitude_ ;
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getAltitude() {
        return altitude_;
      }
      public Builder setAltitude(float value) {
        bitField0_ |= 0x00000001;
        altitude_ = value;
        
        return this;
      }
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000001);
        altitude_ = 0F;
        
        return this;
      }
      
      // required float roll = 2;
      private float roll_ ;
      public boolean hasRoll() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getRoll() {
        return roll_;
      }
      public Builder setRoll(float value) {
        bitField0_ |= 0x00000002;
        roll_ = value;
        
        return this;
      }
      public Builder clearRoll() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roll_ = 0F;
        
        return this;
      }
      
      // required float pitch = 3;
      private float pitch_ ;
      public boolean hasPitch() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getPitch() {
        return pitch_;
      }
      public Builder setPitch(float value) {
        bitField0_ |= 0x00000004;
        pitch_ = value;
        
        return this;
      }
      public Builder clearPitch() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pitch_ = 0F;
        
        return this;
      }
      
      // required float yaw_rate = 4;
      private float yawRate_ ;
      public boolean hasYawRate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getYawRate() {
        return yawRate_;
      }
      public Builder setYawRate(float value) {
        bitField0_ |= 0x00000008;
        yawRate_ = value;
        
        return this;
      }
      public Builder clearYawRate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        yawRate_ = 0F;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.hummingdroid.Attitude)
    }
    
    static {
      defaultInstance = new Attitude(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.hummingdroid.Attitude)
  }
  
  public interface MotorsControlOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required float altitude_throttle = 1;
    boolean hasAltitudeThrottle();
    float getAltitudeThrottle();
    
    // required float roll_throttle = 2;
    boolean hasRollThrottle();
    float getRollThrottle();
    
    // required float pitch_throttle = 3;
    boolean hasPitchThrottle();
    float getPitchThrottle();
    
    // required float yaw_throttle = 4;
    boolean hasYawThrottle();
    float getYawThrottle();
  }
  public static final class MotorsControl extends
      com.google.protobuf.GeneratedMessageLite
      implements MotorsControlOrBuilder {
    // Use MotorsControl.newBuilder() to construct.
    private MotorsControl(Builder builder) {
      super(builder);
    }
    private MotorsControl(boolean noInit) {}
    
    private static final MotorsControl defaultInstance;
    public static MotorsControl getDefaultInstance() {
      return defaultInstance;
    }
    
    public MotorsControl getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required float altitude_throttle = 1;
    public static final int ALTITUDE_THROTTLE_FIELD_NUMBER = 1;
    private float altitudeThrottle_;
    public boolean hasAltitudeThrottle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getAltitudeThrottle() {
      return altitudeThrottle_;
    }
    
    // required float roll_throttle = 2;
    public static final int ROLL_THROTTLE_FIELD_NUMBER = 2;
    private float rollThrottle_;
    public boolean hasRollThrottle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getRollThrottle() {
      return rollThrottle_;
    }
    
    // required float pitch_throttle = 3;
    public static final int PITCH_THROTTLE_FIELD_NUMBER = 3;
    private float pitchThrottle_;
    public boolean hasPitchThrottle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getPitchThrottle() {
      return pitchThrottle_;
    }
    
    // required float yaw_throttle = 4;
    public static final int YAW_THROTTLE_FIELD_NUMBER = 4;
    private float yawThrottle_;
    public boolean hasYawThrottle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getYawThrottle() {
      return yawThrottle_;
    }
    
    private void initFields() {
      altitudeThrottle_ = 0F;
      rollThrottle_ = 0F;
      pitchThrottle_ = 0F;
      yawThrottle_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasAltitudeThrottle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollThrottle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchThrottle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawThrottle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, altitudeThrottle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, rollThrottle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pitchThrottle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, yawThrottle_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, altitudeThrottle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, rollThrottle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pitchThrottle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, yawThrottle_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.hummingdroid.Communication.MotorsControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.MotorsControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.MotorsControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hummingdroid.Communication.MotorsControl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hummingdroid.Communication.MotorsControl, Builder>
        implements org.hummingdroid.Communication.MotorsControlOrBuilder {
      // Construct using org.hummingdroid.Communication.MotorsControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        altitudeThrottle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        rollThrottle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        pitchThrottle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        yawThrottle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.hummingdroid.Communication.MotorsControl getDefaultInstanceForType() {
        return org.hummingdroid.Communication.MotorsControl.getDefaultInstance();
      }
      
      public org.hummingdroid.Communication.MotorsControl build() {
        org.hummingdroid.Communication.MotorsControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.hummingdroid.Communication.MotorsControl buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.hummingdroid.Communication.MotorsControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.hummingdroid.Communication.MotorsControl buildPartial() {
        org.hummingdroid.Communication.MotorsControl result = new org.hummingdroid.Communication.MotorsControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.altitudeThrottle_ = altitudeThrottle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rollThrottle_ = rollThrottle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pitchThrottle_ = pitchThrottle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.yawThrottle_ = yawThrottle_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.hummingdroid.Communication.MotorsControl other) {
        if (other == org.hummingdroid.Communication.MotorsControl.getDefaultInstance()) return this;
        if (other.hasAltitudeThrottle()) {
          setAltitudeThrottle(other.getAltitudeThrottle());
        }
        if (other.hasRollThrottle()) {
          setRollThrottle(other.getRollThrottle());
        }
        if (other.hasPitchThrottle()) {
          setPitchThrottle(other.getPitchThrottle());
        }
        if (other.hasYawThrottle()) {
          setYawThrottle(other.getYawThrottle());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasAltitudeThrottle()) {
          
          return false;
        }
        if (!hasRollThrottle()) {
          
          return false;
        }
        if (!hasPitchThrottle()) {
          
          return false;
        }
        if (!hasYawThrottle()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              altitudeThrottle_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              rollThrottle_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pitchThrottle_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              yawThrottle_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float altitude_throttle = 1;
      private float altitudeThrottle_ ;
      public boolean hasAltitudeThrottle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getAltitudeThrottle() {
        return altitudeThrottle_;
      }
      public Builder setAltitudeThrottle(float value) {
        bitField0_ |= 0x00000001;
        altitudeThrottle_ = value;
        
        return this;
      }
      public Builder clearAltitudeThrottle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        altitudeThrottle_ = 0F;
        
        return this;
      }
      
      // required float roll_throttle = 2;
      private float rollThrottle_ ;
      public boolean hasRollThrottle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getRollThrottle() {
        return rollThrottle_;
      }
      public Builder setRollThrottle(float value) {
        bitField0_ |= 0x00000002;
        rollThrottle_ = value;
        
        return this;
      }
      public Builder clearRollThrottle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rollThrottle_ = 0F;
        
        return this;
      }
      
      // required float pitch_throttle = 3;
      private float pitchThrottle_ ;
      public boolean hasPitchThrottle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getPitchThrottle() {
        return pitchThrottle_;
      }
      public Builder setPitchThrottle(float value) {
        bitField0_ |= 0x00000004;
        pitchThrottle_ = value;
        
        return this;
      }
      public Builder clearPitchThrottle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pitchThrottle_ = 0F;
        
        return this;
      }
      
      // required float yaw_throttle = 4;
      private float yawThrottle_ ;
      public boolean hasYawThrottle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getYawThrottle() {
        return yawThrottle_;
      }
      public Builder setYawThrottle(float value) {
        bitField0_ |= 0x00000008;
        yawThrottle_ = value;
        
        return this;
      }
      public Builder clearYawThrottle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        yawThrottle_ = 0F;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.hummingdroid.MotorsControl)
    }
    
    static {
      defaultInstance = new MotorsControl(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.hummingdroid.MotorsControl)
  }
  
  public interface PIDOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required float Kp = 1;
    boolean hasKp();
    float getKp();
    
    // required float Ki = 2;
    boolean hasKi();
    float getKi();
    
    // required float Kd = 3;
    boolean hasKd();
    float getKd();
    
    // required float Ko = 4;
    boolean hasKo();
    float getKo();
    
    // required float Td = 5;
    boolean hasTd();
    float getTd();
  }
  public static final class PID extends
      com.google.protobuf.GeneratedMessageLite
      implements PIDOrBuilder {
    // Use PID.newBuilder() to construct.
    private PID(Builder builder) {
      super(builder);
    }
    private PID(boolean noInit) {}
    
    private static final PID defaultInstance;
    public static PID getDefaultInstance() {
      return defaultInstance;
    }
    
    public PID getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required float Kp = 1;
    public static final int KP_FIELD_NUMBER = 1;
    private float kp_;
    public boolean hasKp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getKp() {
      return kp_;
    }
    
    // required float Ki = 2;
    public static final int KI_FIELD_NUMBER = 2;
    private float ki_;
    public boolean hasKi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getKi() {
      return ki_;
    }
    
    // required float Kd = 3;
    public static final int KD_FIELD_NUMBER = 3;
    private float kd_;
    public boolean hasKd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getKd() {
      return kd_;
    }
    
    // required float Ko = 4;
    public static final int KO_FIELD_NUMBER = 4;
    private float ko_;
    public boolean hasKo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getKo() {
      return ko_;
    }
    
    // required float Td = 5;
    public static final int TD_FIELD_NUMBER = 5;
    private float td_;
    public boolean hasTd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getTd() {
      return td_;
    }
    
    private void initFields() {
      kp_ = 0F;
      ki_ = 0F;
      kd_ = 0F;
      ko_ = 0F;
      td_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasKp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, kp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, ki_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, kd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, ko_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, td_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, kp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, ki_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, kd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, ko_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, td_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.hummingdroid.Communication.PID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.PID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.PID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.PID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hummingdroid.Communication.PID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hummingdroid.Communication.PID, Builder>
        implements org.hummingdroid.Communication.PIDOrBuilder {
      // Construct using org.hummingdroid.Communication.PID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        kp_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        ki_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        kd_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        ko_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        td_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.hummingdroid.Communication.PID getDefaultInstanceForType() {
        return org.hummingdroid.Communication.PID.getDefaultInstance();
      }
      
      public org.hummingdroid.Communication.PID build() {
        org.hummingdroid.Communication.PID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.hummingdroid.Communication.PID buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.hummingdroid.Communication.PID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.hummingdroid.Communication.PID buildPartial() {
        org.hummingdroid.Communication.PID result = new org.hummingdroid.Communication.PID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.kp_ = kp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ki_ = ki_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.kd_ = kd_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ko_ = ko_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.td_ = td_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.hummingdroid.Communication.PID other) {
        if (other == org.hummingdroid.Communication.PID.getDefaultInstance()) return this;
        if (other.hasKp()) {
          setKp(other.getKp());
        }
        if (other.hasKi()) {
          setKi(other.getKi());
        }
        if (other.hasKd()) {
          setKd(other.getKd());
        }
        if (other.hasKo()) {
          setKo(other.getKo());
        }
        if (other.hasTd()) {
          setTd(other.getTd());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasKp()) {
          
          return false;
        }
        if (!hasKi()) {
          
          return false;
        }
        if (!hasKd()) {
          
          return false;
        }
        if (!hasKo()) {
          
          return false;
        }
        if (!hasTd()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              kp_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              ki_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              kd_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              ko_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              td_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float Kp = 1;
      private float kp_ ;
      public boolean hasKp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getKp() {
        return kp_;
      }
      public Builder setKp(float value) {
        bitField0_ |= 0x00000001;
        kp_ = value;
        
        return this;
      }
      public Builder clearKp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kp_ = 0F;
        
        return this;
      }
      
      // required float Ki = 2;
      private float ki_ ;
      public boolean hasKi() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getKi() {
        return ki_;
      }
      public Builder setKi(float value) {
        bitField0_ |= 0x00000002;
        ki_ = value;
        
        return this;
      }
      public Builder clearKi() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ki_ = 0F;
        
        return this;
      }
      
      // required float Kd = 3;
      private float kd_ ;
      public boolean hasKd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getKd() {
        return kd_;
      }
      public Builder setKd(float value) {
        bitField0_ |= 0x00000004;
        kd_ = value;
        
        return this;
      }
      public Builder clearKd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kd_ = 0F;
        
        return this;
      }
      
      // required float Ko = 4;
      private float ko_ ;
      public boolean hasKo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getKo() {
        return ko_;
      }
      public Builder setKo(float value) {
        bitField0_ |= 0x00000008;
        ko_ = value;
        
        return this;
      }
      public Builder clearKo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ko_ = 0F;
        
        return this;
      }
      
      // required float Td = 5;
      private float td_ ;
      public boolean hasTd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getTd() {
        return td_;
      }
      public Builder setTd(float value) {
        bitField0_ |= 0x00000010;
        td_ = value;
        
        return this;
      }
      public Builder clearTd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        td_ = 0F;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.hummingdroid.PID)
    }
    
    static {
      defaultInstance = new PID(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.hummingdroid.PID)
  }
  
  public interface CommandPacketOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .org.hummingdroid.Attitude command = 1;
    boolean hasCommand();
    org.hummingdroid.Communication.Attitude getCommand();
    
    // optional .org.hummingdroid.CommandPacket.ControllerConfig controller_config = 2;
    boolean hasControllerConfig();
    org.hummingdroid.Communication.CommandPacket.ControllerConfig getControllerConfig();
    
    // optional .org.hummingdroid.CommandPacket.TelemetryConfig telemetry_config = 3;
    boolean hasTelemetryConfig();
    org.hummingdroid.Communication.CommandPacket.TelemetryConfig getTelemetryConfig();
    
    // optional .org.hummingdroid.CommandPacket.SensorsConfig sensors_config = 4;
    boolean hasSensorsConfig();
    org.hummingdroid.Communication.CommandPacket.SensorsConfig getSensorsConfig();
  }
  public static final class CommandPacket extends
      com.google.protobuf.GeneratedMessageLite
      implements CommandPacketOrBuilder {
    // Use CommandPacket.newBuilder() to construct.
    private CommandPacket(Builder builder) {
      super(builder);
    }
    private CommandPacket(boolean noInit) {}
    
    private static final CommandPacket defaultInstance;
    public static CommandPacket getDefaultInstance() {
      return defaultInstance;
    }
    
    public CommandPacket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface ControllerConfigOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required .org.hummingdroid.PID altitude_pid = 1;
      boolean hasAltitudePid();
      org.hummingdroid.Communication.PID getAltitudePid();
      
      // required .org.hummingdroid.PID roll_pid = 2;
      boolean hasRollPid();
      org.hummingdroid.Communication.PID getRollPid();
      
      // required .org.hummingdroid.PID pitch_pid = 3;
      boolean hasPitchPid();
      org.hummingdroid.Communication.PID getPitchPid();
      
      // required .org.hummingdroid.PID yaw_rate_pid = 4;
      boolean hasYawRatePid();
      org.hummingdroid.Communication.PID getYawRatePid();
      
      // optional float max_inclinaison = 5;
      boolean hasMaxInclinaison();
      float getMaxInclinaison();
      
      // optional float max_altitude = 6;
      boolean hasMaxAltitude();
      float getMaxAltitude();
      
      // optional float max_yaw_rate = 7;
      boolean hasMaxYawRate();
      float getMaxYawRate();
    }
    public static final class ControllerConfig extends
        com.google.protobuf.GeneratedMessageLite
        implements ControllerConfigOrBuilder {
      // Use ControllerConfig.newBuilder() to construct.
      private ControllerConfig(Builder builder) {
        super(builder);
      }
      private ControllerConfig(boolean noInit) {}
      
      private static final ControllerConfig defaultInstance;
      public static ControllerConfig getDefaultInstance() {
        return defaultInstance;
      }
      
      public ControllerConfig getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required .org.hummingdroid.PID altitude_pid = 1;
      public static final int ALTITUDE_PID_FIELD_NUMBER = 1;
      private org.hummingdroid.Communication.PID altitudePid_;
      public boolean hasAltitudePid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.hummingdroid.Communication.PID getAltitudePid() {
        return altitudePid_;
      }
      
      // required .org.hummingdroid.PID roll_pid = 2;
      public static final int ROLL_PID_FIELD_NUMBER = 2;
      private org.hummingdroid.Communication.PID rollPid_;
      public boolean hasRollPid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.hummingdroid.Communication.PID getRollPid() {
        return rollPid_;
      }
      
      // required .org.hummingdroid.PID pitch_pid = 3;
      public static final int PITCH_PID_FIELD_NUMBER = 3;
      private org.hummingdroid.Communication.PID pitchPid_;
      public boolean hasPitchPid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.hummingdroid.Communication.PID getPitchPid() {
        return pitchPid_;
      }
      
      // required .org.hummingdroid.PID yaw_rate_pid = 4;
      public static final int YAW_RATE_PID_FIELD_NUMBER = 4;
      private org.hummingdroid.Communication.PID yawRatePid_;
      public boolean hasYawRatePid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public org.hummingdroid.Communication.PID getYawRatePid() {
        return yawRatePid_;
      }
      
      // optional float max_inclinaison = 5;
      public static final int MAX_INCLINAISON_FIELD_NUMBER = 5;
      private float maxInclinaison_;
      public boolean hasMaxInclinaison() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getMaxInclinaison() {
        return maxInclinaison_;
      }
      
      // optional float max_altitude = 6;
      public static final int MAX_ALTITUDE_FIELD_NUMBER = 6;
      private float maxAltitude_;
      public boolean hasMaxAltitude() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getMaxAltitude() {
        return maxAltitude_;
      }
      
      // optional float max_yaw_rate = 7;
      public static final int MAX_YAW_RATE_FIELD_NUMBER = 7;
      private float maxYawRate_;
      public boolean hasMaxYawRate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getMaxYawRate() {
        return maxYawRate_;
      }
      
      private void initFields() {
        altitudePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        rollPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        pitchPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        yawRatePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        maxInclinaison_ = 0F;
        maxAltitude_ = 0F;
        maxYawRate_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasAltitudePid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRollPid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPitchPid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasYawRatePid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getAltitudePid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getRollPid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPitchPid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getYawRatePid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, altitudePid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, rollPid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, pitchPid_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, yawRatePid_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, maxInclinaison_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, maxAltitude_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, maxYawRate_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, altitudePid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, rollPid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, pitchPid_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, yawRatePid_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, maxInclinaison_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, maxAltitude_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, maxYawRate_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.ControllerConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.hummingdroid.Communication.CommandPacket.ControllerConfig prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.hummingdroid.Communication.CommandPacket.ControllerConfig, Builder>
          implements org.hummingdroid.Communication.CommandPacket.ControllerConfigOrBuilder {
        // Construct using org.hummingdroid.Communication.CommandPacket.ControllerConfig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          altitudePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000001);
          rollPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000002);
          pitchPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000004);
          yawRatePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000008);
          maxInclinaison_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          maxAltitude_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          maxYawRate_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.hummingdroid.Communication.CommandPacket.ControllerConfig getDefaultInstanceForType() {
          return org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance();
        }
        
        public org.hummingdroid.Communication.CommandPacket.ControllerConfig build() {
          org.hummingdroid.Communication.CommandPacket.ControllerConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.hummingdroid.Communication.CommandPacket.ControllerConfig buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.hummingdroid.Communication.CommandPacket.ControllerConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.hummingdroid.Communication.CommandPacket.ControllerConfig buildPartial() {
          org.hummingdroid.Communication.CommandPacket.ControllerConfig result = new org.hummingdroid.Communication.CommandPacket.ControllerConfig(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.altitudePid_ = altitudePid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.rollPid_ = rollPid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.pitchPid_ = pitchPid_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.yawRatePid_ = yawRatePid_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.maxInclinaison_ = maxInclinaison_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.maxAltitude_ = maxAltitude_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.maxYawRate_ = maxYawRate_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.hummingdroid.Communication.CommandPacket.ControllerConfig other) {
          if (other == org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance()) return this;
          if (other.hasAltitudePid()) {
            mergeAltitudePid(other.getAltitudePid());
          }
          if (other.hasRollPid()) {
            mergeRollPid(other.getRollPid());
          }
          if (other.hasPitchPid()) {
            mergePitchPid(other.getPitchPid());
          }
          if (other.hasYawRatePid()) {
            mergeYawRatePid(other.getYawRatePid());
          }
          if (other.hasMaxInclinaison()) {
            setMaxInclinaison(other.getMaxInclinaison());
          }
          if (other.hasMaxAltitude()) {
            setMaxAltitude(other.getMaxAltitude());
          }
          if (other.hasMaxYawRate()) {
            setMaxYawRate(other.getMaxYawRate());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasAltitudePid()) {
            
            return false;
          }
          if (!hasRollPid()) {
            
            return false;
          }
          if (!hasPitchPid()) {
            
            return false;
          }
          if (!hasYawRatePid()) {
            
            return false;
          }
          if (!getAltitudePid().isInitialized()) {
            
            return false;
          }
          if (!getRollPid().isInitialized()) {
            
            return false;
          }
          if (!getPitchPid().isInitialized()) {
            
            return false;
          }
          if (!getYawRatePid().isInitialized()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 10: {
                org.hummingdroid.Communication.PID.Builder subBuilder = org.hummingdroid.Communication.PID.newBuilder();
                if (hasAltitudePid()) {
                  subBuilder.mergeFrom(getAltitudePid());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setAltitudePid(subBuilder.buildPartial());
                break;
              }
              case 18: {
                org.hummingdroid.Communication.PID.Builder subBuilder = org.hummingdroid.Communication.PID.newBuilder();
                if (hasRollPid()) {
                  subBuilder.mergeFrom(getRollPid());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setRollPid(subBuilder.buildPartial());
                break;
              }
              case 26: {
                org.hummingdroid.Communication.PID.Builder subBuilder = org.hummingdroid.Communication.PID.newBuilder();
                if (hasPitchPid()) {
                  subBuilder.mergeFrom(getPitchPid());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setPitchPid(subBuilder.buildPartial());
                break;
              }
              case 34: {
                org.hummingdroid.Communication.PID.Builder subBuilder = org.hummingdroid.Communication.PID.newBuilder();
                if (hasYawRatePid()) {
                  subBuilder.mergeFrom(getYawRatePid());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setYawRatePid(subBuilder.buildPartial());
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                maxInclinaison_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                maxAltitude_ = input.readFloat();
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                maxYawRate_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required .org.hummingdroid.PID altitude_pid = 1;
        private org.hummingdroid.Communication.PID altitudePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        public boolean hasAltitudePid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public org.hummingdroid.Communication.PID getAltitudePid() {
          return altitudePid_;
        }
        public Builder setAltitudePid(org.hummingdroid.Communication.PID value) {
          if (value == null) {
            throw new NullPointerException();
          }
          altitudePid_ = value;
          
          bitField0_ |= 0x00000001;
          return this;
        }
        public Builder setAltitudePid(
            org.hummingdroid.Communication.PID.Builder builderForValue) {
          altitudePid_ = builderForValue.build();
          
          bitField0_ |= 0x00000001;
          return this;
        }
        public Builder mergeAltitudePid(org.hummingdroid.Communication.PID value) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              altitudePid_ != org.hummingdroid.Communication.PID.getDefaultInstance()) {
            altitudePid_ =
              org.hummingdroid.Communication.PID.newBuilder(altitudePid_).mergeFrom(value).buildPartial();
          } else {
            altitudePid_ = value;
          }
          
          bitField0_ |= 0x00000001;
          return this;
        }
        public Builder clearAltitudePid() {
          altitudePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        // required .org.hummingdroid.PID roll_pid = 2;
        private org.hummingdroid.Communication.PID rollPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        public boolean hasRollPid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public org.hummingdroid.Communication.PID getRollPid() {
          return rollPid_;
        }
        public Builder setRollPid(org.hummingdroid.Communication.PID value) {
          if (value == null) {
            throw new NullPointerException();
          }
          rollPid_ = value;
          
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder setRollPid(
            org.hummingdroid.Communication.PID.Builder builderForValue) {
          rollPid_ = builderForValue.build();
          
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder mergeRollPid(org.hummingdroid.Communication.PID value) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              rollPid_ != org.hummingdroid.Communication.PID.getDefaultInstance()) {
            rollPid_ =
              org.hummingdroid.Communication.PID.newBuilder(rollPid_).mergeFrom(value).buildPartial();
          } else {
            rollPid_ = value;
          }
          
          bitField0_ |= 0x00000002;
          return this;
        }
        public Builder clearRollPid() {
          rollPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        // required .org.hummingdroid.PID pitch_pid = 3;
        private org.hummingdroid.Communication.PID pitchPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        public boolean hasPitchPid() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public org.hummingdroid.Communication.PID getPitchPid() {
          return pitchPid_;
        }
        public Builder setPitchPid(org.hummingdroid.Communication.PID value) {
          if (value == null) {
            throw new NullPointerException();
          }
          pitchPid_ = value;
          
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder setPitchPid(
            org.hummingdroid.Communication.PID.Builder builderForValue) {
          pitchPid_ = builderForValue.build();
          
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder mergePitchPid(org.hummingdroid.Communication.PID value) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              pitchPid_ != org.hummingdroid.Communication.PID.getDefaultInstance()) {
            pitchPid_ =
              org.hummingdroid.Communication.PID.newBuilder(pitchPid_).mergeFrom(value).buildPartial();
          } else {
            pitchPid_ = value;
          }
          
          bitField0_ |= 0x00000004;
          return this;
        }
        public Builder clearPitchPid() {
          pitchPid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        // required .org.hummingdroid.PID yaw_rate_pid = 4;
        private org.hummingdroid.Communication.PID yawRatePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
        public boolean hasYawRatePid() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public org.hummingdroid.Communication.PID getYawRatePid() {
          return yawRatePid_;
        }
        public Builder setYawRatePid(org.hummingdroid.Communication.PID value) {
          if (value == null) {
            throw new NullPointerException();
          }
          yawRatePid_ = value;
          
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder setYawRatePid(
            org.hummingdroid.Communication.PID.Builder builderForValue) {
          yawRatePid_ = builderForValue.build();
          
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder mergeYawRatePid(org.hummingdroid.Communication.PID value) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              yawRatePid_ != org.hummingdroid.Communication.PID.getDefaultInstance()) {
            yawRatePid_ =
              org.hummingdroid.Communication.PID.newBuilder(yawRatePid_).mergeFrom(value).buildPartial();
          } else {
            yawRatePid_ = value;
          }
          
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder clearYawRatePid() {
          yawRatePid_ = org.hummingdroid.Communication.PID.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        // optional float max_inclinaison = 5;
        private float maxInclinaison_ ;
        public boolean hasMaxInclinaison() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public float getMaxInclinaison() {
          return maxInclinaison_;
        }
        public Builder setMaxInclinaison(float value) {
          bitField0_ |= 0x00000010;
          maxInclinaison_ = value;
          
          return this;
        }
        public Builder clearMaxInclinaison() {
          bitField0_ = (bitField0_ & ~0x00000010);
          maxInclinaison_ = 0F;
          
          return this;
        }
        
        // optional float max_altitude = 6;
        private float maxAltitude_ ;
        public boolean hasMaxAltitude() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public float getMaxAltitude() {
          return maxAltitude_;
        }
        public Builder setMaxAltitude(float value) {
          bitField0_ |= 0x00000020;
          maxAltitude_ = value;
          
          return this;
        }
        public Builder clearMaxAltitude() {
          bitField0_ = (bitField0_ & ~0x00000020);
          maxAltitude_ = 0F;
          
          return this;
        }
        
        // optional float max_yaw_rate = 7;
        private float maxYawRate_ ;
        public boolean hasMaxYawRate() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        public float getMaxYawRate() {
          return maxYawRate_;
        }
        public Builder setMaxYawRate(float value) {
          bitField0_ |= 0x00000040;
          maxYawRate_ = value;
          
          return this;
        }
        public Builder clearMaxYawRate() {
          bitField0_ = (bitField0_ & ~0x00000040);
          maxYawRate_ = 0F;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.hummingdroid.CommandPacket.ControllerConfig)
      }
      
      static {
        defaultInstance = new ControllerConfig(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.hummingdroid.CommandPacket.ControllerConfig)
    }
    
    public interface TelemetryConfigOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required string host = 1;
      boolean hasHost();
      String getHost();
      
      // required int32 port = 2;
      boolean hasPort();
      int getPort();
      
      // required bool commandEnabled = 3;
      boolean hasCommandEnabled();
      boolean getCommandEnabled();
      
      // required bool attitudeEnabled = 4;
      boolean hasAttitudeEnabled();
      boolean getAttitudeEnabled();
      
      // required bool controlEnabled = 5;
      boolean hasControlEnabled();
      boolean getControlEnabled();
    }
    public static final class TelemetryConfig extends
        com.google.protobuf.GeneratedMessageLite
        implements TelemetryConfigOrBuilder {
      // Use TelemetryConfig.newBuilder() to construct.
      private TelemetryConfig(Builder builder) {
        super(builder);
      }
      private TelemetryConfig(boolean noInit) {}
      
      private static final TelemetryConfig defaultInstance;
      public static TelemetryConfig getDefaultInstance() {
        return defaultInstance;
      }
      
      public TelemetryConfig getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required string host = 1;
      public static final int HOST_FIELD_NUMBER = 1;
      private java.lang.Object host_;
      public boolean hasHost() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHost() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            host_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required int32 port = 2;
      public static final int PORT_FIELD_NUMBER = 2;
      private int port_;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      
      // required bool commandEnabled = 3;
      public static final int COMMANDENABLED_FIELD_NUMBER = 3;
      private boolean commandEnabled_;
      public boolean hasCommandEnabled() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getCommandEnabled() {
        return commandEnabled_;
      }
      
      // required bool attitudeEnabled = 4;
      public static final int ATTITUDEENABLED_FIELD_NUMBER = 4;
      private boolean attitudeEnabled_;
      public boolean hasAttitudeEnabled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getAttitudeEnabled() {
        return attitudeEnabled_;
      }
      
      // required bool controlEnabled = 5;
      public static final int CONTROLENABLED_FIELD_NUMBER = 5;
      private boolean controlEnabled_;
      public boolean hasControlEnabled() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getControlEnabled() {
        return controlEnabled_;
      }
      
      private void initFields() {
        host_ = "";
        port_ = 0;
        commandEnabled_ = false;
        attitudeEnabled_ = false;
        controlEnabled_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasHost()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPort()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCommandEnabled()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasAttitudeEnabled()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasControlEnabled()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getHostBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, port_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, commandEnabled_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, attitudeEnabled_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, controlEnabled_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getHostBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, port_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, commandEnabled_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, attitudeEnabled_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, controlEnabled_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.TelemetryConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.hummingdroid.Communication.CommandPacket.TelemetryConfig prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.hummingdroid.Communication.CommandPacket.TelemetryConfig, Builder>
          implements org.hummingdroid.Communication.CommandPacket.TelemetryConfigOrBuilder {
        // Construct using org.hummingdroid.Communication.CommandPacket.TelemetryConfig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          host_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          port_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          commandEnabled_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          attitudeEnabled_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          controlEnabled_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.hummingdroid.Communication.CommandPacket.TelemetryConfig getDefaultInstanceForType() {
          return org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance();
        }
        
        public org.hummingdroid.Communication.CommandPacket.TelemetryConfig build() {
          org.hummingdroid.Communication.CommandPacket.TelemetryConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.hummingdroid.Communication.CommandPacket.TelemetryConfig buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.hummingdroid.Communication.CommandPacket.TelemetryConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.hummingdroid.Communication.CommandPacket.TelemetryConfig buildPartial() {
          org.hummingdroid.Communication.CommandPacket.TelemetryConfig result = new org.hummingdroid.Communication.CommandPacket.TelemetryConfig(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.host_ = host_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.port_ = port_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.commandEnabled_ = commandEnabled_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.attitudeEnabled_ = attitudeEnabled_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.controlEnabled_ = controlEnabled_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.hummingdroid.Communication.CommandPacket.TelemetryConfig other) {
          if (other == org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance()) return this;
          if (other.hasHost()) {
            setHost(other.getHost());
          }
          if (other.hasPort()) {
            setPort(other.getPort());
          }
          if (other.hasCommandEnabled()) {
            setCommandEnabled(other.getCommandEnabled());
          }
          if (other.hasAttitudeEnabled()) {
            setAttitudeEnabled(other.getAttitudeEnabled());
          }
          if (other.hasControlEnabled()) {
            setControlEnabled(other.getControlEnabled());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasHost()) {
            
            return false;
          }
          if (!hasPort()) {
            
            return false;
          }
          if (!hasCommandEnabled()) {
            
            return false;
          }
          if (!hasAttitudeEnabled()) {
            
            return false;
          }
          if (!hasControlEnabled()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                host_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                port_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                commandEnabled_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                attitudeEnabled_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                controlEnabled_ = input.readBool();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string host = 1;
        private java.lang.Object host_ = "";
        public boolean hasHost() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getHost() {
          java.lang.Object ref = host_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            host_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setHost(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          host_ = value;
          
          return this;
        }
        public Builder clearHost() {
          bitField0_ = (bitField0_ & ~0x00000001);
          host_ = getDefaultInstance().getHost();
          
          return this;
        }
        void setHost(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          host_ = value;
          
        }
        
        // required int32 port = 2;
        private int port_ ;
        public boolean hasPort() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getPort() {
          return port_;
        }
        public Builder setPort(int value) {
          bitField0_ |= 0x00000002;
          port_ = value;
          
          return this;
        }
        public Builder clearPort() {
          bitField0_ = (bitField0_ & ~0x00000002);
          port_ = 0;
          
          return this;
        }
        
        // required bool commandEnabled = 3;
        private boolean commandEnabled_ ;
        public boolean hasCommandEnabled() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public boolean getCommandEnabled() {
          return commandEnabled_;
        }
        public Builder setCommandEnabled(boolean value) {
          bitField0_ |= 0x00000004;
          commandEnabled_ = value;
          
          return this;
        }
        public Builder clearCommandEnabled() {
          bitField0_ = (bitField0_ & ~0x00000004);
          commandEnabled_ = false;
          
          return this;
        }
        
        // required bool attitudeEnabled = 4;
        private boolean attitudeEnabled_ ;
        public boolean hasAttitudeEnabled() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public boolean getAttitudeEnabled() {
          return attitudeEnabled_;
        }
        public Builder setAttitudeEnabled(boolean value) {
          bitField0_ |= 0x00000008;
          attitudeEnabled_ = value;
          
          return this;
        }
        public Builder clearAttitudeEnabled() {
          bitField0_ = (bitField0_ & ~0x00000008);
          attitudeEnabled_ = false;
          
          return this;
        }
        
        // required bool controlEnabled = 5;
        private boolean controlEnabled_ ;
        public boolean hasControlEnabled() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public boolean getControlEnabled() {
          return controlEnabled_;
        }
        public Builder setControlEnabled(boolean value) {
          bitField0_ |= 0x00000010;
          controlEnabled_ = value;
          
          return this;
        }
        public Builder clearControlEnabled() {
          bitField0_ = (bitField0_ & ~0x00000010);
          controlEnabled_ = false;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.hummingdroid.CommandPacket.TelemetryConfig)
      }
      
      static {
        defaultInstance = new TelemetryConfig(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.hummingdroid.CommandPacket.TelemetryConfig)
    }
    
    public interface SensorsConfigOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required float accel_lowpass_constant = 1;
      boolean hasAccelLowpassConstant();
      float getAccelLowpassConstant();
    }
    public static final class SensorsConfig extends
        com.google.protobuf.GeneratedMessageLite
        implements SensorsConfigOrBuilder {
      // Use SensorsConfig.newBuilder() to construct.
      private SensorsConfig(Builder builder) {
        super(builder);
      }
      private SensorsConfig(boolean noInit) {}
      
      private static final SensorsConfig defaultInstance;
      public static SensorsConfig getDefaultInstance() {
        return defaultInstance;
      }
      
      public SensorsConfig getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required float accel_lowpass_constant = 1;
      public static final int ACCEL_LOWPASS_CONSTANT_FIELD_NUMBER = 1;
      private float accelLowpassConstant_;
      public boolean hasAccelLowpassConstant() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getAccelLowpassConstant() {
        return accelLowpassConstant_;
      }
      
      private void initFields() {
        accelLowpassConstant_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasAccelLowpassConstant()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, accelLowpassConstant_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, accelLowpassConstant_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.hummingdroid.Communication.CommandPacket.SensorsConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.hummingdroid.Communication.CommandPacket.SensorsConfig prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.hummingdroid.Communication.CommandPacket.SensorsConfig, Builder>
          implements org.hummingdroid.Communication.CommandPacket.SensorsConfigOrBuilder {
        // Construct using org.hummingdroid.Communication.CommandPacket.SensorsConfig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          accelLowpassConstant_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.hummingdroid.Communication.CommandPacket.SensorsConfig getDefaultInstanceForType() {
          return org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance();
        }
        
        public org.hummingdroid.Communication.CommandPacket.SensorsConfig build() {
          org.hummingdroid.Communication.CommandPacket.SensorsConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.hummingdroid.Communication.CommandPacket.SensorsConfig buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.hummingdroid.Communication.CommandPacket.SensorsConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.hummingdroid.Communication.CommandPacket.SensorsConfig buildPartial() {
          org.hummingdroid.Communication.CommandPacket.SensorsConfig result = new org.hummingdroid.Communication.CommandPacket.SensorsConfig(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accelLowpassConstant_ = accelLowpassConstant_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.hummingdroid.Communication.CommandPacket.SensorsConfig other) {
          if (other == org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance()) return this;
          if (other.hasAccelLowpassConstant()) {
            setAccelLowpassConstant(other.getAccelLowpassConstant());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasAccelLowpassConstant()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                accelLowpassConstant_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required float accel_lowpass_constant = 1;
        private float accelLowpassConstant_ ;
        public boolean hasAccelLowpassConstant() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public float getAccelLowpassConstant() {
          return accelLowpassConstant_;
        }
        public Builder setAccelLowpassConstant(float value) {
          bitField0_ |= 0x00000001;
          accelLowpassConstant_ = value;
          
          return this;
        }
        public Builder clearAccelLowpassConstant() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accelLowpassConstant_ = 0F;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.hummingdroid.CommandPacket.SensorsConfig)
      }
      
      static {
        defaultInstance = new SensorsConfig(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.hummingdroid.CommandPacket.SensorsConfig)
    }
    
    private int bitField0_;
    // optional .org.hummingdroid.Attitude command = 1;
    public static final int COMMAND_FIELD_NUMBER = 1;
    private org.hummingdroid.Communication.Attitude command_;
    public boolean hasCommand() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.hummingdroid.Communication.Attitude getCommand() {
      return command_;
    }
    
    // optional .org.hummingdroid.CommandPacket.ControllerConfig controller_config = 2;
    public static final int CONTROLLER_CONFIG_FIELD_NUMBER = 2;
    private org.hummingdroid.Communication.CommandPacket.ControllerConfig controllerConfig_;
    public boolean hasControllerConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.hummingdroid.Communication.CommandPacket.ControllerConfig getControllerConfig() {
      return controllerConfig_;
    }
    
    // optional .org.hummingdroid.CommandPacket.TelemetryConfig telemetry_config = 3;
    public static final int TELEMETRY_CONFIG_FIELD_NUMBER = 3;
    private org.hummingdroid.Communication.CommandPacket.TelemetryConfig telemetryConfig_;
    public boolean hasTelemetryConfig() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.hummingdroid.Communication.CommandPacket.TelemetryConfig getTelemetryConfig() {
      return telemetryConfig_;
    }
    
    // optional .org.hummingdroid.CommandPacket.SensorsConfig sensors_config = 4;
    public static final int SENSORS_CONFIG_FIELD_NUMBER = 4;
    private org.hummingdroid.Communication.CommandPacket.SensorsConfig sensorsConfig_;
    public boolean hasSensorsConfig() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public org.hummingdroid.Communication.CommandPacket.SensorsConfig getSensorsConfig() {
      return sensorsConfig_;
    }
    
    private void initFields() {
      command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
      controllerConfig_ = org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance();
      telemetryConfig_ = org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance();
      sensorsConfig_ = org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasCommand()) {
        if (!getCommand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasControllerConfig()) {
        if (!getControllerConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTelemetryConfig()) {
        if (!getTelemetryConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSensorsConfig()) {
        if (!getSensorsConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, command_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, controllerConfig_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, telemetryConfig_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, sensorsConfig_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, command_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, controllerConfig_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, telemetryConfig_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sensorsConfig_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.hummingdroid.Communication.CommandPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.CommandPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.CommandPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hummingdroid.Communication.CommandPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hummingdroid.Communication.CommandPacket, Builder>
        implements org.hummingdroid.Communication.CommandPacketOrBuilder {
      // Construct using org.hummingdroid.Communication.CommandPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        controllerConfig_ = org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        telemetryConfig_ = org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        sensorsConfig_ = org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.hummingdroid.Communication.CommandPacket getDefaultInstanceForType() {
        return org.hummingdroid.Communication.CommandPacket.getDefaultInstance();
      }
      
      public org.hummingdroid.Communication.CommandPacket build() {
        org.hummingdroid.Communication.CommandPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.hummingdroid.Communication.CommandPacket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.hummingdroid.Communication.CommandPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.hummingdroid.Communication.CommandPacket buildPartial() {
        org.hummingdroid.Communication.CommandPacket result = new org.hummingdroid.Communication.CommandPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.command_ = command_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.controllerConfig_ = controllerConfig_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.telemetryConfig_ = telemetryConfig_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sensorsConfig_ = sensorsConfig_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.hummingdroid.Communication.CommandPacket other) {
        if (other == org.hummingdroid.Communication.CommandPacket.getDefaultInstance()) return this;
        if (other.hasCommand()) {
          mergeCommand(other.getCommand());
        }
        if (other.hasControllerConfig()) {
          mergeControllerConfig(other.getControllerConfig());
        }
        if (other.hasTelemetryConfig()) {
          mergeTelemetryConfig(other.getTelemetryConfig());
        }
        if (other.hasSensorsConfig()) {
          mergeSensorsConfig(other.getSensorsConfig());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasCommand()) {
          if (!getCommand().isInitialized()) {
            
            return false;
          }
        }
        if (hasControllerConfig()) {
          if (!getControllerConfig().isInitialized()) {
            
            return false;
          }
        }
        if (hasTelemetryConfig()) {
          if (!getTelemetryConfig().isInitialized()) {
            
            return false;
          }
        }
        if (hasSensorsConfig()) {
          if (!getSensorsConfig().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.hummingdroid.Communication.Attitude.Builder subBuilder = org.hummingdroid.Communication.Attitude.newBuilder();
              if (hasCommand()) {
                subBuilder.mergeFrom(getCommand());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommand(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.hummingdroid.Communication.CommandPacket.ControllerConfig.Builder subBuilder = org.hummingdroid.Communication.CommandPacket.ControllerConfig.newBuilder();
              if (hasControllerConfig()) {
                subBuilder.mergeFrom(getControllerConfig());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setControllerConfig(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.hummingdroid.Communication.CommandPacket.TelemetryConfig.Builder subBuilder = org.hummingdroid.Communication.CommandPacket.TelemetryConfig.newBuilder();
              if (hasTelemetryConfig()) {
                subBuilder.mergeFrom(getTelemetryConfig());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTelemetryConfig(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.hummingdroid.Communication.CommandPacket.SensorsConfig.Builder subBuilder = org.hummingdroid.Communication.CommandPacket.SensorsConfig.newBuilder();
              if (hasSensorsConfig()) {
                subBuilder.mergeFrom(getSensorsConfig());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSensorsConfig(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .org.hummingdroid.Attitude command = 1;
      private org.hummingdroid.Communication.Attitude command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
      public boolean hasCommand() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.hummingdroid.Communication.Attitude getCommand() {
        return command_;
      }
      public Builder setCommand(org.hummingdroid.Communication.Attitude value) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCommand(
          org.hummingdroid.Communication.Attitude.Builder builderForValue) {
        command_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCommand(org.hummingdroid.Communication.Attitude value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            command_ != org.hummingdroid.Communication.Attitude.getDefaultInstance()) {
          command_ =
            org.hummingdroid.Communication.Attitude.newBuilder(command_).mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCommand() {
        command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // optional .org.hummingdroid.CommandPacket.ControllerConfig controller_config = 2;
      private org.hummingdroid.Communication.CommandPacket.ControllerConfig controllerConfig_ = org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance();
      public boolean hasControllerConfig() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.hummingdroid.Communication.CommandPacket.ControllerConfig getControllerConfig() {
        return controllerConfig_;
      }
      public Builder setControllerConfig(org.hummingdroid.Communication.CommandPacket.ControllerConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        controllerConfig_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setControllerConfig(
          org.hummingdroid.Communication.CommandPacket.ControllerConfig.Builder builderForValue) {
        controllerConfig_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeControllerConfig(org.hummingdroid.Communication.CommandPacket.ControllerConfig value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            controllerConfig_ != org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance()) {
          controllerConfig_ =
            org.hummingdroid.Communication.CommandPacket.ControllerConfig.newBuilder(controllerConfig_).mergeFrom(value).buildPartial();
        } else {
          controllerConfig_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearControllerConfig() {
        controllerConfig_ = org.hummingdroid.Communication.CommandPacket.ControllerConfig.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional .org.hummingdroid.CommandPacket.TelemetryConfig telemetry_config = 3;
      private org.hummingdroid.Communication.CommandPacket.TelemetryConfig telemetryConfig_ = org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance();
      public boolean hasTelemetryConfig() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.hummingdroid.Communication.CommandPacket.TelemetryConfig getTelemetryConfig() {
        return telemetryConfig_;
      }
      public Builder setTelemetryConfig(org.hummingdroid.Communication.CommandPacket.TelemetryConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        telemetryConfig_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setTelemetryConfig(
          org.hummingdroid.Communication.CommandPacket.TelemetryConfig.Builder builderForValue) {
        telemetryConfig_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeTelemetryConfig(org.hummingdroid.Communication.CommandPacket.TelemetryConfig value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            telemetryConfig_ != org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance()) {
          telemetryConfig_ =
            org.hummingdroid.Communication.CommandPacket.TelemetryConfig.newBuilder(telemetryConfig_).mergeFrom(value).buildPartial();
        } else {
          telemetryConfig_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearTelemetryConfig() {
        telemetryConfig_ = org.hummingdroid.Communication.CommandPacket.TelemetryConfig.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // optional .org.hummingdroid.CommandPacket.SensorsConfig sensors_config = 4;
      private org.hummingdroid.Communication.CommandPacket.SensorsConfig sensorsConfig_ = org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance();
      public boolean hasSensorsConfig() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public org.hummingdroid.Communication.CommandPacket.SensorsConfig getSensorsConfig() {
        return sensorsConfig_;
      }
      public Builder setSensorsConfig(org.hummingdroid.Communication.CommandPacket.SensorsConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sensorsConfig_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setSensorsConfig(
          org.hummingdroid.Communication.CommandPacket.SensorsConfig.Builder builderForValue) {
        sensorsConfig_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeSensorsConfig(org.hummingdroid.Communication.CommandPacket.SensorsConfig value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            sensorsConfig_ != org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance()) {
          sensorsConfig_ =
            org.hummingdroid.Communication.CommandPacket.SensorsConfig.newBuilder(sensorsConfig_).mergeFrom(value).buildPartial();
        } else {
          sensorsConfig_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearSensorsConfig() {
        sensorsConfig_ = org.hummingdroid.Communication.CommandPacket.SensorsConfig.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.hummingdroid.CommandPacket)
    }
    
    static {
      defaultInstance = new CommandPacket(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.hummingdroid.CommandPacket)
  }
  
  public interface TelemetryPacketOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .org.hummingdroid.Attitude command = 1;
    boolean hasCommand();
    org.hummingdroid.Communication.Attitude getCommand();
    
    // optional .org.hummingdroid.Attitude attitude = 2;
    boolean hasAttitude();
    org.hummingdroid.Communication.Attitude getAttitude();
    
    // optional .org.hummingdroid.MotorsControl control = 3;
    boolean hasControl();
    org.hummingdroid.Communication.MotorsControl getControl();
  }
  public static final class TelemetryPacket extends
      com.google.protobuf.GeneratedMessageLite
      implements TelemetryPacketOrBuilder {
    // Use TelemetryPacket.newBuilder() to construct.
    private TelemetryPacket(Builder builder) {
      super(builder);
    }
    private TelemetryPacket(boolean noInit) {}
    
    private static final TelemetryPacket defaultInstance;
    public static TelemetryPacket getDefaultInstance() {
      return defaultInstance;
    }
    
    public TelemetryPacket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional .org.hummingdroid.Attitude command = 1;
    public static final int COMMAND_FIELD_NUMBER = 1;
    private org.hummingdroid.Communication.Attitude command_;
    public boolean hasCommand() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.hummingdroid.Communication.Attitude getCommand() {
      return command_;
    }
    
    // optional .org.hummingdroid.Attitude attitude = 2;
    public static final int ATTITUDE_FIELD_NUMBER = 2;
    private org.hummingdroid.Communication.Attitude attitude_;
    public boolean hasAttitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.hummingdroid.Communication.Attitude getAttitude() {
      return attitude_;
    }
    
    // optional .org.hummingdroid.MotorsControl control = 3;
    public static final int CONTROL_FIELD_NUMBER = 3;
    private org.hummingdroid.Communication.MotorsControl control_;
    public boolean hasControl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.hummingdroid.Communication.MotorsControl getControl() {
      return control_;
    }
    
    private void initFields() {
      command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
      attitude_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
      control_ = org.hummingdroid.Communication.MotorsControl.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasCommand()) {
        if (!getCommand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAttitude()) {
        if (!getAttitude().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasControl()) {
        if (!getControl().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, command_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, attitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, control_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, command_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, attitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, control_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.hummingdroid.Communication.TelemetryPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hummingdroid.Communication.TelemetryPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hummingdroid.Communication.TelemetryPacket, Builder>
        implements org.hummingdroid.Communication.TelemetryPacketOrBuilder {
      // Construct using org.hummingdroid.Communication.TelemetryPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        attitude_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        control_ = org.hummingdroid.Communication.MotorsControl.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.hummingdroid.Communication.TelemetryPacket getDefaultInstanceForType() {
        return org.hummingdroid.Communication.TelemetryPacket.getDefaultInstance();
      }
      
      public org.hummingdroid.Communication.TelemetryPacket build() {
        org.hummingdroid.Communication.TelemetryPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.hummingdroid.Communication.TelemetryPacket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.hummingdroid.Communication.TelemetryPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.hummingdroid.Communication.TelemetryPacket buildPartial() {
        org.hummingdroid.Communication.TelemetryPacket result = new org.hummingdroid.Communication.TelemetryPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.command_ = command_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.attitude_ = attitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.control_ = control_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.hummingdroid.Communication.TelemetryPacket other) {
        if (other == org.hummingdroid.Communication.TelemetryPacket.getDefaultInstance()) return this;
        if (other.hasCommand()) {
          mergeCommand(other.getCommand());
        }
        if (other.hasAttitude()) {
          mergeAttitude(other.getAttitude());
        }
        if (other.hasControl()) {
          mergeControl(other.getControl());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasCommand()) {
          if (!getCommand().isInitialized()) {
            
            return false;
          }
        }
        if (hasAttitude()) {
          if (!getAttitude().isInitialized()) {
            
            return false;
          }
        }
        if (hasControl()) {
          if (!getControl().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.hummingdroid.Communication.Attitude.Builder subBuilder = org.hummingdroid.Communication.Attitude.newBuilder();
              if (hasCommand()) {
                subBuilder.mergeFrom(getCommand());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommand(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.hummingdroid.Communication.Attitude.Builder subBuilder = org.hummingdroid.Communication.Attitude.newBuilder();
              if (hasAttitude()) {
                subBuilder.mergeFrom(getAttitude());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAttitude(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.hummingdroid.Communication.MotorsControl.Builder subBuilder = org.hummingdroid.Communication.MotorsControl.newBuilder();
              if (hasControl()) {
                subBuilder.mergeFrom(getControl());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setControl(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .org.hummingdroid.Attitude command = 1;
      private org.hummingdroid.Communication.Attitude command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
      public boolean hasCommand() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.hummingdroid.Communication.Attitude getCommand() {
        return command_;
      }
      public Builder setCommand(org.hummingdroid.Communication.Attitude value) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCommand(
          org.hummingdroid.Communication.Attitude.Builder builderForValue) {
        command_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCommand(org.hummingdroid.Communication.Attitude value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            command_ != org.hummingdroid.Communication.Attitude.getDefaultInstance()) {
          command_ =
            org.hummingdroid.Communication.Attitude.newBuilder(command_).mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCommand() {
        command_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // optional .org.hummingdroid.Attitude attitude = 2;
      private org.hummingdroid.Communication.Attitude attitude_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
      public boolean hasAttitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.hummingdroid.Communication.Attitude getAttitude() {
        return attitude_;
      }
      public Builder setAttitude(org.hummingdroid.Communication.Attitude value) {
        if (value == null) {
          throw new NullPointerException();
        }
        attitude_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setAttitude(
          org.hummingdroid.Communication.Attitude.Builder builderForValue) {
        attitude_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeAttitude(org.hummingdroid.Communication.Attitude value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            attitude_ != org.hummingdroid.Communication.Attitude.getDefaultInstance()) {
          attitude_ =
            org.hummingdroid.Communication.Attitude.newBuilder(attitude_).mergeFrom(value).buildPartial();
        } else {
          attitude_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearAttitude() {
        attitude_ = org.hummingdroid.Communication.Attitude.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional .org.hummingdroid.MotorsControl control = 3;
      private org.hummingdroid.Communication.MotorsControl control_ = org.hummingdroid.Communication.MotorsControl.getDefaultInstance();
      public boolean hasControl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.hummingdroid.Communication.MotorsControl getControl() {
        return control_;
      }
      public Builder setControl(org.hummingdroid.Communication.MotorsControl value) {
        if (value == null) {
          throw new NullPointerException();
        }
        control_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setControl(
          org.hummingdroid.Communication.MotorsControl.Builder builderForValue) {
        control_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeControl(org.hummingdroid.Communication.MotorsControl value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            control_ != org.hummingdroid.Communication.MotorsControl.getDefaultInstance()) {
          control_ =
            org.hummingdroid.Communication.MotorsControl.newBuilder(control_).mergeFrom(value).buildPartial();
        } else {
          control_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearControl() {
        control_ = org.hummingdroid.Communication.MotorsControl.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.hummingdroid.TelemetryPacket)
    }
    
    static {
      defaultInstance = new TelemetryPacket(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.hummingdroid.TelemetryPacket)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
