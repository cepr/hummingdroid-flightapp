#!/bin/bash

OBJS="\
	libs/LSM9DS0_Breakout/Libraries/Arduino/SFE_LSM9DS0/SFE_LSM9DS0.o \
	libs/SPI/SPI.o \
	libs/Wire/Wire.o \
	Communication.pb.o \
	Motors.o \
	Telemetry.o \
	DatagramSocket.o \
	Object.o \
	Value.o \
	Receiver.o \
	FlightService.o \
	Telemetry.o \
	Sensors.o \
	Thread.o \
	Timestamp.o \
	Controller.o"

ARDUINO_OBJS="\
	libs/arduino-1.5.3-Intel.1.0.4/fast_gpio_pci.o \
	libs/arduino-1.5.3-Intel.1.0.4/fast_gpio_sc.o \
	libs/arduino-1.5.3-Intel.1.0.4/wiring_digital.o \
	libs/arduino-1.5.3-Intel.1.0.4/sysfs.o \
	libs/arduino-1.5.3-Intel.1.0.4/wiring_analog.o \
	libs/arduino-1.5.3-Intel.1.0.4/trace.o \
	libs/arduino-1.5.3-Intel.1.0.4/fast_gpio_nc.o \
	libs/arduino-1.5.3-Intel.1.0.4/i2c.o \
	libs/arduino-1.5.3-Intel.1.0.4/mux.o \
	libs/arduino-1.5.3-Intel.1.0.4/fast_gpio_common.o \
	libs/arduino-1.5.3-Intel.1.0.4/interrupt.o \
	libs/arduino-1.5.3-Intel.1.0.4/Stream.o \
	libs/arduino-1.5.3-Intel.1.0.4/WString.o \
	libs/arduino-1.5.3-Intel.1.0.4/Tone.o \
	libs/arduino-1.5.3-Intel.1.0.4/pulseIn.o \
	libs/arduino-1.5.3-Intel.1.0.4/UtilMisc.o \
	libs/arduino-1.5.3-Intel.1.0.4/TTYUART.o \
	libs/arduino-1.5.3-Intel.1.0.4/main.o \
	libs/arduino-1.5.3-Intel.1.0.4/UtilTime.o \
	libs/arduino-1.5.3-Intel.1.0.4/WMath.o \
	libs/arduino-1.5.3-Intel.1.0.4/Print.o \
	libs/arduino-1.5.3-Intel.1.0.4/IPAddress.o \
	libs/arduino-1.5.3-Intel.1.0.4/RingBuffer.o \
	libs/arduino-1.5.3-Intel.1.0.4/softwarepwm.o \
	libs/arduino-1.5.3-Intel.1.0.4/variant.o"

DEPENDS="${OBJS//.o/.d} ${ARDUINO_OBJS//.o/.d}"

INCLUDES="\
	libs/arduino-1.5.3-Intel.1.0.4 \
	libs/Wire \
	libs/SPI \
	libs/LSM9DS0_Breakout/Libraries/Arduino/SFE_LSM9DS0 \
	libs/protobuf/src"

function usage() {
	echo 'Usage: configure <Intel Edison SDK environment file path>'
	echo 'Generates the build files for the project.'
}

function generate_makefile() {
	echo '# This file has been autogenerated by "configure"'
	echo
	echo '.PHONY: all install clean'
	echo
	echo 'ifndef OECORE_SDK_VERSION'
	echo 'all install clean:'
	echo '	. '$SDK_ENV_FILE' ; $(MAKE) $(MAKECMDGOALS)'
	echo 'else'
	echo
	echo 'all: flight_software'
	echo
	for i in $DEPENDS
	do
		echo "-include $i"
	done
	echo
	echo 'CPPFLAGS+=\'
	echo ' -DARDUINO=153 \'
	for i in $INCLUDES
	do
		echo ' -I "'$i'" \'
	done
	echo ' -Wall \'
	echo ' -O0 \'
	echo ' -MD'
	echo
	echo 'LINK.o:=$(LINK.cpp)'
	echo "arduino_core.a: $ARDUINO_OBJS"
	echo '	ar r $@ $^'
	echo
	echo 'flight_software: LDLIBS+=-lpthread'
	echo "flight_software: $OBJS arduino_core.a libs/protobuf/build/src/.libs/libprotobuf-lite.a"
	echo '	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@'
	echo
	echo 'install: flight_software'
	echo '	ssh root@quadcopter.local ''systemctl stop hummingdroid.service'''
	echo '	scp $< root@quadcopter.local:/home/root'
	echo '	ssh root@quadcopter.local ''sync'''
	echo
	echo 'libs/protobuf/build/src/.libs/libprotobuf-lite.a:'
	echo '	mkdir -p libs/protobuf/build'
	echo '	cd libs/protobuf/build && ../configure && make'
	echo
	echo 'Communication.pb.cc: Communication.proto libs/protobuf/build/src/.libs/libprotobuf-lite.a'
	echo '	libs/protobuf/build/src/protoc --cpp_out=. Communication.proto'
	echo
	echo 'clean:'
	echo "	rm -rf flight_software arduino_core.a libs/protobuf/build Communication.pb.h Communication.pb.cc"
	echo "	rm -rf $OBJS"
	echo "	rm -rf $ARDUINO_OBJS"
	echo "	rm -rf $DEPENDS"
	echo
	echo 'endif'
}

SDK_ENV_FILE=$1
if [ -z "$SDK_ENV_FILE" ]
then
	usage
	exit 1
fi

if [ ! -e "$SDK_ENV_FILE" ]
then
	echo "File not found: $SDK_ENV_FILE"
	usage
	exit 1
fi

generate_makefile > Makefile
